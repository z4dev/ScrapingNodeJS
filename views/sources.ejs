<div class="row">
  <!-- Success Alert -->
  <div id="successAlert" style="display:none; position:fixed; top:20px; left:20px; z-index:9999; background-color:#28a745; color:white; padding:15px 20px; border-radius:5px; box-shadow:0px 0px 10px rgba(0,0,0,0.3);">
    <i class="fa fa-check-circle"></i> <span id="successMessage">تم جلب عدد من البيانات</span>
  </div>

  <!-- Error Alert -->
  <div id="errorAlert" style="display:none; position:fixed; top:20px; left:20px; z-index:9999; background-color:#dc3545; color:white; padding:15px 20px; border-radius:5px; box-shadow:0px 0px 10px rgba(0,0,0,0.3);">
    <i class="fa fa-times-circle"></i> <span id="errorMessage">لا يوجد أخبار جديدة</span>
  </div>

  <div class="col-lg-12">
    <div class="panel panel-default">
      <div class="panel-heading d-flex justify-content-between align-items-center">
        <h3 class="panel-title"><i class="fa fa-newspaper-o fa-fw"></i> المصادر</h3>
        <!-- Scrape All Button -->
        <button id="scrapeAllButton" class="btn btn-primary">
          جلب البيانات من جميع المصادر
        </button>
      </div>

      <!-- /.panel-heading -->
      <div class="panel-body">
        <table class="table table-striped table-bordered table-hover" id="dataTables-sources">
          <thead>
            <tr>
              <th>#</th>
              <th>الاسم</th>
              <th>الرابط</th>
              <th>عدد الأخبار</th>
              <th style="text-align: center;">جلب بيانات</th> <!-- New column for the scrape button -->
            </tr>
          </thead>
          <tbody>
            <% sources.forEach(source => { %>
            <tr class="odd gradeX">
              <td><%= source.source_id %></td>
              <td><%= source.source_name %></td>
              <td><a target="_blank" href="<%= source.source_url %>"><%= source.source_url %></a></td>
              <td><%= source.news_count %></td>
              <td style="text-align: center;">
                <button class="fa fa-reload fa-refresh btn-scraper" 
                        data-url="<%= source.source_url %>" 
                        data-source-name="<%= source.source_name %>"></button>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
      <!-- /.panel-body -->
    </div>
    <!-- /.panel -->
  </div>
  <!-- /.col-lg-12 -->
</div>
<!-- /.row -->

<!-- Loading Indicator (Initially Hidden) -->
<div id="loadingIndicator" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%); z-index:9999; background-color:white; padding:10px; border-radius:5px; box-shadow:0px 0px 10px rgba(0,0,0,0.5);">
    <i class="fa fa-spinner fa-spin"></i> يتم جلب البيانات...
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    let isReloadPending = false;

    // Attach event listeners to all scraper buttons
    document.querySelectorAll(".btn-scraper").forEach(button => {
        button.addEventListener("click", handleScrapeClick);
    });

    // Event listener for scraping all sources
    document.getElementById("scrapeAllButton").addEventListener("click", async function() {
        try {
            // Disable the button to prevent multiple clicks
            this.disabled = true;
            this.classList.add('disabled'); // Optional: add a disabled class for styling

            showLoadingIndicator(true);

            const response = await fetch(`/sources/scrap`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            handleScrapeResponse(data);

        } catch (error) {
            console.error("Error fetching the data:", error);
            showCustomAlert('error', "حدث خطأ أثناء جلب البيانات، الرجاء المحاولة مرة أخرى");
        } finally {
            showLoadingIndicator(false);
            this.disabled = false;
            this.classList.remove('disabled'); // Optional: remove the disabled class for styling
        }
    });

    async function handleScrapeClick(event) {
        const button = event.currentTarget;
        const url = button.getAttribute("data-url");


        try {
            button.disabled = true;
            button.classList.add('disabled');

            showLoadingIndicator(true);

            const response = await fetch(`/sources/scrap?url=${encodeURIComponent(url)}`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            handleScrapeResponse(data);

        } catch (error) {
            console.error("Error fetching the data:", error);
            showCustomAlert('error', "حدث خطأ أثناء جلب البيانات، الرجاء المحاولة مرة أخرى");
        } finally {
            showLoadingIndicator(false);
            button.disabled = false;
            button.classList.remove('disabled');
        }
    }

    function handleScrapeResponse(data) {
        const { newsCount, isFetching } = data;

        if (isFetching) {
            showCustomAlert('success', `تم جلب ${newsCount} خبر جديد`);
        } else {
            showCustomAlert('error', "لا يوجد أخبار جديدة");
        }

        // Reload the page if it is not already pending
        if (!isReloadPending) {
            isReloadPending = true;
            setTimeout(() => {
                window.location.reload();
            }, 2000);
        }
    }

    function showLoadingIndicator(show) {
        const loadingIndicator = document.getElementById("loadingIndicator");
        loadingIndicator.style.display = show ? "block" : "none";
    }

    function showCustomAlert(type, message) {
        const alertBox = document.getElementById(type === 'success' ? 'successAlert' : 'errorAlert');
        alertBox.querySelector('span').textContent = message;
        alertBox.style.display = 'block';

        setTimeout(() => {
            alertBox.style.display = 'none';
        }, 3000);
    }
});

</script>
  
<style>
  .btn-scraper.disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  .panel-heading.d-flex {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  #scrapeAllButton {
    margin-top: -5px;
  }
</style>
